# Javascript Node CircleCI 2.0 configuration file
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
# version: 2
# jobs:
#   build:
#     machine:
#       image: circleci/classic:latest
#       docker_layer_caching: true
#     working_directory: ~/bitcore
#     steps:
#       - checkout

#       - run:
#           name: Build service
#           command: npm run test:ci

version: 2.1

orbs:
  aws-ecr: circleci/aws-ecr@4.0.1
  aws-ecs: circleci/aws-ecs@0.0.7

jobs:
  install_deps_and_test:
    docker:
      - image: circleci/node:10.23.1
    steps:
      - checkout
      - run:
          name: Install Dependencies
          command: cd packages/bitcore-wallet-service/ && npm install
      # - run:
      #     name: Run Test
      #     command: cd packages/bitcore-wallet-service/ && npm run test:ci

workflows:
  build_test_deploy:
    jobs:
      - install_deps_and_test:
          filters:
            branches:
              only:
                - staging
                - master
      - aws-ecr/build_and_push_image:
          working_directory: ~/bitcore/packages/bitcore-wallet-service
          requires:
            - install_deps_and_test
          region: DEV_AWS_REGION
          account-url: DEV_AWS_ECR_ACCOUNT_URL
          aws-access-key-id: DEV_AWS_ACCESS_KEY_ID
          aws-secret-access-key: DEV_AWS_SECRET_ACCESS_KEY
          repo: ${DEV_AWS_RESOURCE_NAME_PREFIX}
          tag: ${CIRCLE_SHA1}
          extra-build-args: --build-arg SENDGRID_API_KEY=${SENDGRID_API_KEY}
            --build-arg SENDGRID_API_KEY=${SENDGRID_API_KEY}
            --build-arg SENDGRID_API_KEY=${SENDGRID_API_KEY}
          filters:
            branches:
              only:
                - master
      - aws-ecs/deploy-service-update:
          working_directory: ~/bitcore/packages/bitcore-wallet-service
          requires:
            - aws-ecr/build_and_push_image
          aws-region: ${DEV_AWS_REGION}
          aws-access-key-id: ${DEV_AWS_ACCESS_KEY_ID}
          aws-secret-access-key: ${DEV_AWS_SECRET_ACCESS_KEY}
          family: "${DEV_AWS_RESOURCE_NAME_PREFIX}-task"
          service-name: "${DEV_AWS_RESOURCE_NAME_PREFIX}-service"
          cluster-name: "${DEV_AWS_RESOURCE_NAME_PREFIX}-cluster"
          container-image-name-updates: "container=${DEV_AWS_RESOURCE_NAME_PREFIX},tag=${CIRCLE_SHA1}"
          filters:
            branches:
              only:
                - master